// TELEGRAM BOT
import { TelegramClient } from '@mtcute/bun'
import { Dispatcher, filters } from '@mtcute/dispatcher'

// –ö–û–ù–°–¢–ê–ù–¢–´
import * as env from '../env'

// –§–£–ù–ö–¶–ò–ò
import { getChat, createJSONdata } from '../handlers/getChatHistory'

const phone = env.BOT_PHONE
const chatId = env.BOT_CHAT_ID
const pass = env.BOT_PASS

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
const tg = new TelegramClient({
  apiId: env.API_ID,
  apiHash: env.API_HASH,
  storage: './bot-data/session',
})

// –î–∏—Å–ø–µ—Ç—á–µ—Ä —Å–æ–±—ã—Ç–∏–π
const dp = Dispatcher.for(tg)

// –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ –±–æ—Ç–µ
const self = await tg.start({
  phone: phone,
  code: async () => {
    const code = await prompt('üôà –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥:')
    if (code === null) {
      throw new Error('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
    }
    return code
  },
  password: pass,
})

if (self) {
  console.log('\nü§ñ MTCUTE: –í–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ -', self.username)
} else {
  console.error('\nüõë MTCUTE: –ù–µ –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É')
}

// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
export async function getChatHistory() {
  const limit = 100
  let offset = {
    id: 0,
    date: Date.now(),
  }
  let data: any[] = []

  console.log('\nüü¢ MTCUTE: –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞...')

  // –ü–æ—à–∞–≥–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥
  while (true) {
    try {
      const history = await tg.getHistory(chatId, { limit, offset })
      const chatData = getChat(history)

      if (chatData) {
        // <-- –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É
        data.push(...chatData)
      }

      if (history.length < limit) {
        break
      }

      offset.id += limit
    } catch (error) {
      console.error(
        '\nüõë MTCUTE: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:',
        error
      )
      break
    }
  }

  console.log('üü¢ MTCUTE: –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞')

  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –ø–æ –Ω–∞—à–µ–π –º–æ–¥–µ–ª–∏ –∏–∑ LyricType
  createJSONdata(data)
}

getChatHistory()

// –ö–æ–º–∞–Ω–¥—ã
// dp.onNewMessage(filters.chatId(chatId), async (msg) => {
//   await msg.replyText('hiiii from dope bot! üåµ')
// })

// dp.onNewMessage(filters.start, async (msg) => {
//   await msg.answerText('Hello, world!')
// })

// dp.onNewMessage(async (msg) => {
//   await msg.answerText('Hello, dope world!')
// })
