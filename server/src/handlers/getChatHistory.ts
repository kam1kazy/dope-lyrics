// HANDLERS
import { filterHistory } from './filterHistory'
import { createJSONdata } from './createJSONdata'

// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
export async function getChatHistory({
  tg,
  chatId,
}: {
  tg: any
  chatId: number
}) {
  let params = {
    limit: 100,
    offset: {
      date: Number(Date.now()),
      id: 0,
    },
  }

  let data: any[] = []
  console.log('MTCUTE: üßª –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞...')

  // –ü–æ—à–∞–≥–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥
  while (true) {
    try {
      const history = await tg.getHistory(chatId, { limit: 20 })
      console.log('MTCUTE: –°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞:', history.length)

      let chatData: any[] | boolean = []

      if (history.length > 0) {
        chatData = filterHistory(history)
      } else {
        console.error('MTCUTE: üõë –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞')
        return false
      }

      if (chatData) {
        data.push(...chatData)
      }

      if (history.length < params.limit) {
        break
      }

      params.offset.id += params.limit

      console.log(params.offset.id)
    } catch (error) {
      console.error(
        '\nMTCUTE: üõë –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:\n\n',
        error
      )
      break
    }
  }

  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –ø–æ –Ω–∞—à–µ–π –º–æ–¥–µ–ª–∏ –∏–∑ ILyric
  if (data.length) {
    console.log('MTCUTE: üì• –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞')
    createJSONdata(data)
  }
}
